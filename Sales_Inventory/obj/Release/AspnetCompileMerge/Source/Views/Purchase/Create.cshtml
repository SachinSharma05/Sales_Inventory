@model Sales_Inventory.Models.PurchaseViewModel

@{
    ViewBag.Title = "Create Purchase";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <section class="content-header">
        <h1>Purchase Create</h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
            <li><a href="@Url.Action("List", "Purchase")"><i class="fa fa-calendar"></i> Purchase List</a></li>
            <li class="active">Create</li>
        </ol>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-body">
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Purchase From</label>
                                @Html.TextBoxFor(m => m.Purchase_From, new { @class = "form-control required", placeholder = "Enter Purchase From Name", @id = "purchaseFrom" })
                                @Html.ValidationMessageFor(m => m.Purchase_From)
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Seller Phone </label>
                                @Html.TextBoxFor(m => m.Purchase_From_Phone, new { @class = "form-control required", placeholder = "Enter Seller Phone No", @id = "sellerPhoneNo", @maxlength = "10" })
                                @Html.ValidationMessageFor(m => m.Purchase_From_Phone)
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Purchase Date</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.TextBoxFor(m => m.Purchase_Date, "{0:dd/MM/yyyy}", new { @class = "form-control", placeholder = "Purchase Date dd/mm/yyyy", @id = "purchaseDate" })
                                    @Html.ValidationMessageFor(m => m.Purchase_Date)
                                </div>
                            </div>
                        </div>
                        <table id="tblProducts" class="table" cellpadding="0" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Item Name</th>
                                    <th>Quantity(Kgs)</th>
                                    <th>Waste</th>
                                    <th>Actual Quantity</th>
                                    <th>Price(Per KG)</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.purchase_Products)
                                {
                                    <tr>
                                        <td>@item.ItemName</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.Damaged</td>
                                        <td>@item.FinalQty</td>
                                        <td>@item.Price</td>
                                        <td>@item.Total</td>
                                        <td><input type="button" value="Remove" onclick="Remove(this)" class="form-control" /></td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td>@Html.DropDownList("MyProducts", new SelectList(Model.ProductList, "Text", "Text"), new { @class = "form-control required", @id = "txtItemName", type = "option" })</td>
                                    <td><input type="text" id="txtQuantity" class="form-control" /></td>
                                    <td><input type="text" id="txtDamaged" class="form-control" /></td>
                                    <td><input type="text" id="txtFinalQty" class="form-control" readonly /></td>
                                    <td><input type="text" id="txtPrice" class="form-control" /></td>
                                    <td><input type="text" id="txtTotal" class="form-control" readonly /></td>
                                    <td><input type="button" id="btnAdd" value="Add" class="btn btn-primary form-control" /></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="box-footer">
                        <input type="submit" class="btn btn-primary" value="Submit" id="btnSave" />
                        <a href="@Url.Action("List", "Purchase")" class="btn btn-default">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts
{
    <script type="text/javascript">

        $("body").on("click", "#btnAdd", function () {
        //Reference the Name and Country TextBoxes.
        var txtItemName = $("#txtItemName");
        var txtQuantity = $("#txtQuantity");
        var txtDamaged = $("#txtDamaged");
        var txtFinalQty = $("#txtFinalQty");
        var txtPrice = $("#txtPrice");
        var txtTotal = $("#txtTotal");

        //Get the reference of the Table's TBODY element.
        var tBody = $("#tblProducts > TBODY")[0];

        //Add Row.
        var row = tBody.insertRow(-1);

        //Add Name cell.
        var cell = $(row.insertCell(-1));
        cell.html(txtItemName.val());

        //Add Age cell.
        cell = $(row.insertCell(-1));
        cell.html(txtQuantity.val());

        //Add Age cell.
        cell = $(row.insertCell(-1));
        cell.html(txtDamaged.val());

        //Add Age cell.
        cell = $(row.insertCell(-1));
        cell.html(txtFinalQty.val());

        //Add Sex cell.
        cell = $(row.insertCell(-1));
        cell.html(txtPrice.val());

        //Add Berth cell.
        cell = $(row.insertCell(-1));
        cell.html(txtTotal.val());

        //Add Button cell.
        cell = $(row.insertCell(-1));
        var btnRemove = $("<input />");
        btnRemove.attr("type", "button");
        btnRemove.attr("class", "btn btn-danger form-control");
        btnRemove.attr("onclick", "Remove(this);");
        btnRemove.val("Remove");
        cell.append(btnRemove);

        //Clear the TextBoxes.
        txtItemName.val("");
        txtQuantity.val("");
        txtDamaged.val("");
        txtFinalQty.val("");
        txtPrice.val("");
        txtTotal.val("");
    });

    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete: " + name)) {
            //Get the reference of the Table.
            var table = $("#tblProducts")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };

    $("body").on("click", "#btnSave", function () {
        //Loop through the Table rows and build a JSON array.
        var purchase_Products = new Array();
        $("#tblProducts TBODY TR").each(function () {
            var row = $(this);
            var product = {};
            product.ItemName = row.find("TD").eq(0).html();
            product.Quantity = row.find("TD").eq(1).html();
            product.Damaged = row.find("TD").eq(2).html();
            product.FinalQty = row.find("TD").eq(3).html();
            product.Price = row.find("TD").eq(4).html();
            product.Total = row.find("TD").eq(5).html();
            purchase_Products.push(product);
        });

        var data = new FormData();
        data.append('purchaseFrom', $("#purchaseFrom").val());
        data.append('sellerPhoneNo', $("#sellerPhoneNo").val());
        data.append('purchaseDate', $("#purchaseDate").val());
        data.append('purchase_Prod', JSON.stringify(purchase_Products));

        //Send the JSON array to Controller using AJAX.
        $.ajax({
            type: "POST",
            url: "/Purchase/Create",
            data: data,
            processData: false,
            contentType: false,
            success: function (result) {
                if (result) {
                    alert("Record(s) Saved.");
                    window.location.href = '@Url.Action("List","Purchase")';
                }
            },
            failure: function (result) {
                alert(result.responseText);
            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    });

        //Date picker
        $('#purchaseDate').datepicker({
            autoclose: true,
            dateFormat: "dd-mm-yy"
        }).val();

        $('#txtPrice').keyup(function () {
            var textone;
            var texttwo;
            textone = parseFloat($('#txtFinalQty').val());
            texttwo = parseFloat($('#txtPrice').val());
            var result = textone * texttwo;
            $('#txtTotal').val(result);
        });

        $('#txtDamaged').keyup(function () {
            var textone;
            var texttwo;
            textone = parseFloat($('#txtQuantity').val());
            texttwo = parseFloat($('#txtDamaged').val());
            var result = textone - texttwo;
            $('#txtFinalQty').val(result);
        });

        $('#txtDamaged').blur(function () {
            if ($(this).val().length == 0) {
                $(this).val("0");
                $('#txtFinalQty').val($("#txtQuantity").val());
            }
        });

        setInterval(function () {
            $.post("/BAL/KeepSessionAlive.ashx", null, function () {
                console.log("Session is alive and kicking!");
            });
        }, 30000);

        function setHeartbeat() {
            setInterval(KeepSessionAlive, 10000);
            console.log("Session is alive and kicking!");
        };

        function KeepSessionAlive() {
            $.post("/BAL/KeepSessionAlive.ashx", null, function () {
                $("#result").append("<p>Session is alive and kicking!<p/>");
            });
        };
    </script>
}
