@model Sales_Inventory.Models.SalesViewModel

@{ ViewBag.Title = "Edit Sale";
                Layout = "~/Views/Shared/_Layout.cshtml"; }

<div class="content-wrapper">
    <section class="content-header">
        <h1>Sales Edit</h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
            <li><a href="@Url.Action("List", "Sales")"><i class="fa fa-calendar"></i> Sales List</a></li>
            <li class="active">Edit</li>
        </ol>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    @Html.HiddenFor(m => m.Id, new { id = "saleId" })
                    <div class="box-body">
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Sale From</label>
                                @Html.TextBoxFor(m => m.Sale_To, new { @class = "form-control required", placeholder = "Enter Sale To Name", @id = "saleTo" })
                                @Html.ValidationMessageFor(m => m.Sale_To)
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Seller Phone </label>
                                @Html.TextBoxFor(m => m.Sale_To_Phone, new { @class = "form-control required", placeholder = "Enter Buyer Phone No", @id = "buyerPhoneNo" })
                                @Html.ValidationMessageFor(m => m.Sale_To_Phone)
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Purchase Date</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.TextBoxFor(m => m.Sale_Date, "{0:dd/MM/yyyy}", new { @class = "form-control", placeholder = "Enter Sale Date dd/mm/yyyy", @id = "saleDate" })
                                    @Html.ValidationMessageFor(m => m.Sale_Date)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6 col-xs-12">
                            <label>Total Stock(KG's)</label>
                            <a class="btn btn-app" id="test" style="font-size: 30px; font-weight: 800; color: white; background-color: red; padding: 7px 5px;"></a>
                        </div>
                        <table id="tblProducts" class="table" cellpadding="0" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Item Name</th>
                                    <th>Quantity(Kgs)</th>
                                    <th>Waste</th>
                                    <th>Actual Quantity</th>
                                    <th>Price(Per KG)</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int index = 0;
                                }

                                @foreach (var item in Model.sale_Products)
                                {
                                    index = index + 1;
                                    <tr>
                                        <td><input type="text" id="txtItemName_@index" class="form-control" value="@item.Item" /></td>
                                        <td><input type="text" id="txtQuantity_@index" class="form-control" value="@item.Quantity" /></td>
                                        <td><input type="text" id="txtDamaged_@index" onkeyup="finalQty(@index)" class="form-control" value="@item.Damaged" /></td>
                                        <td><input type="text" id="txtFinalQty_@index" class="form-control" value="@item.FinalQty" readonly /></td>
                                        <td><input type="text" id="txtPrice_@index" onkeyup="subTotal(@index)" class="form-control" value="@item.Price" /></td>
                                        <td><input type="text" id="txtTotal_@index" class="form-control" value="@item.Total" readonly /></td>
                                        <td><input type="button" value="Remove" onclick="Remove(this)" class="btn btn-danger form-control" /></td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td>@Html.DropDownList("MyProducts", new SelectList(Model.ProductList, "Text", "Text"), new { @class = "form-control required", @id = "ddlProductName", type = "option" })</td>
                                    <td><input type="text" id="txtQuantity_0" class="form-control" /></td>
                                    <td><input type="text" id="txtDamaged_0" onkeyup="finalQty(0)" class="form-control" /></td>
                                    <td><input type="text" id="txtFinalQty_0" class="form-control" readonly /></td>
                                    <td><input type="text" id="txtPrice_0" onkeyup="subTotal(0)" class="form-control" /></td>
                                    <td><input type="text" id="txtTotal_0" class="form-control" /></td>
                                    <td><input type="button" id="btnAdd" value="Add" class="btn btn-primary form-control" /></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="box-footer">
                        <input type="submit" class="btn btn-primary" value="Submit" id="btnSave" />
                        <a href="@Url.Action("List", "Sales")" class="btn btn-default">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts
{
    <script type="text/javascript">
        $("body").on("click", "#btnAdd", function () {
            //Reference the Name and Country TextBoxes.
            var ddlProductName = $("#ddlProductName");
            var txtQuantity = $("#txtQuantity_0");
            var txtDamaged = $("#txtDamaged_0");
            var txtFinalQty = $("#txtFinalQty_0");
            var txtPrice = $("#txtPrice_0");
            var txtTotal = $("#txtTotal_0");

            var id = @index+1;

            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblProducts > TBODY")[0];

            //Add Row.
            var row = tBody.insertRow(-1);

            var cell = $(row.insertCell(-1));
            cell.append(CreateTextBox('txtItem', id, ddlProductName.val(), false, null));

            //Add Quantity cell.
            var cell = $(row.insertCell(-1));
            cell.append(CreateTextBox('txtQuantity', id, txtQuantity.val(), false, null));

            //Add Age cell.
            var cell = $(row.insertCell(-1));
            cell.append(CreateTextBox('txtDamaged', id, txtDamaged.val(), false, 'finalQty'));

            //Add Age cell.
            var cell = $(row.insertCell(-1));
            cell.append(CreateTextBox('txtFinalQty', id, txtFinalQty.val(), true, null));

            //Add Price cell.
            var cell = $(row.insertCell(-1));
            cell.append(CreateTextBox('txtPrice', id, txtPrice.val(), false, 'subTotal'));

            //Add Total cell.
            var cell = $(row.insertCell(-1));
            cell.append(CreateTextBox('txtTotal', id, txtTotal.val(), true, null));

            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<input />");
            btnRemove.attr("type", "button");
            btnRemove.attr("class", "btn btn-danger form-control");
            btnRemove.attr("onclick", "Remove(this);");
            btnRemove.val("Remove");
            cell.append(btnRemove);

            //Clear the TextBoxes.
            ddlProductName.val("Select Product");
            txtQuantity.val("");
            txtDamaged.val("");
            txtFinalQty.val("");
            txtPrice.val("");
            txtTotal.val("");
            $('#test').text(0);
        });

        function CreateTextBox(name, id, value, isreadonly, eventname) {
            var tbox = document.createElement('input');
            tbox.type = 'Text';
            tbox.className = 'form-control';
            tbox.id = name + '_' + id;
            tbox.value = value;
            if (isreadonly) {
                tbox.setAttribute('readonly', true);
            }
            if (eventname) {
                tbox.setAttribute('onkeyup', '' + eventname + '(' + id + ')');
            }

            return tbox;
        }

        function Remove(button) {
            //Determine the reference of the Row using the Button.
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html();
            if (confirm("Do you want to delete: " + name)) {
                //Get the reference of the Table.
                var table = $("#tblProducts")[0];

                //Delete the Table row using it's Index.
                table.deleteRow(row[0].rowIndex);
            }
        };

        $("body").on("click", "#btnSave", function () {
            //Loop through the Table rows and build a JSON array.
            var sale_Products = new Array();
            $("#tblProducts TBODY TR").each(function () {
                var row = $(this);
                var product = {};
                product.Item = $(this).find("td:eq(0) input[type='text']").val();
                product.Quantity = $(this).find("td:eq(1) input[type='text']").val();
                product.Damaged = $(this).find("td:eq(2) input[type='text']").val();
                product.FinalQty = $(this).find("td:eq(3) input[type='text']").val();
                product.Price = $(this).find("td:eq(4) input[type='text']").val();
                product.Total = $(this).find("td:eq(5) input[type='text']").val();
                sale_Products.push(product);
            });

            var data = new FormData();
            data.append('saleId', $("#saleId").val());
            data.append('saleTo', $("#saleTo").val());
            data.append('buyerPhoneNo', $("#buyerPhoneNo").val());
            data.append('saleDate', $("#saleDate").val());
            data.append('sale_Prod', JSON.stringify(sale_Products));
            debugger;

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Sales/Update",
                data: data,
                processData: false,
                contentType: false,
                success: function (r) {
                    alert("Record(s) Updated.");
                    window.location.href = '@Url.Action("List","Sales")';
                },
                failure: function (result) {
                    alert(result.responseText);
                },
                error: function (result) {
                    alert(result.responseText);
                }
            });
        });

        $("#ddlProductName").on("change", function () {
            debugger;
            var data = new FormData();
            data.append('itemName', $("#ddlProductName").val());

            $.ajax({
                type: "POST",
                url: "/Sales/GetProductQuantity",
                data: data,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response) {
                        $('#ProductGrossTotal').val(response);
                        $('#test').text(response);
                    }
                    else {
                        $('#test').text(0);
                    }
                }
            });
        });

        function finalQty(index) {
            var textone;
            var texttwo;
            textone = parseFloat($('#txtQuantity_' + index).val());
            texttwo = parseFloat($('#txtDamaged_' + index).val());
            var result = textone - texttwo;
            $('#txtFinalQty_' + index).val(result);
        };

        function subTotal(index) {
            var textone;
            var texttwo;
            textone = parseFloat($('#txtQuantity_' + index).val());
            texttwo = parseFloat($('#txtPrice_' + index).val());
            var result = textone * texttwo;
            $('#txtTotal_' + index).val(result);
        };

    </script>
}