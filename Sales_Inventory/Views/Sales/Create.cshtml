@model Sales_Inventory.Models.SalesViewModel

@{ ViewBag.Title = "Create Sale";
                Layout = "~/Views/Shared/_Layout.cshtml"; }

<div class="content-wrapper">
    <section class="content-header">
        <h1>Create</h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
            <li><a href="@Url.Action("List", "Sales")"><i class="fa fa-calendar"></i> Sales List</a></li>
            <li class="active">Create</li>
        </ol>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-body">
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Sale To</label>
                                @Html.TextBoxFor(m => m.Sale_To, new { @class = "form-control required", placeholder = "Enter Sale To Name", @id = "saleTo" })
                                @Html.ValidationMessageFor(m => m.Sale_To)
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Contact No </label>
                                @Html.TextBoxFor(m => m.Sale_To_Phone, new { @class = "form-control required", placeholder = "Enter Buyer Phone No", @id = "buyerPhoneNo", @maxlength = "10" })
                                @Html.ValidationMessageFor(m => m.Sale_To_Phone)
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6">
                            <div class="form-group">
                                <label>Sale Date</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.TextBoxFor(m => m.Sale_Date, "{0:dd/MM/yyyy}", new { @class = "form-control", placeholder = "Enter Sale Date dd/mm/yyyy", @id = "saleDate" })
                                    @Html.ValidationMessageFor(m => m.Sale_Date)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6 col-xs-12">
                            <label>Total Stock(KG's)</label>
                            <a class="btn btn-app" id="test" style="font-size: 30px; font-weight: 800; color: white; background-color: red; padding: 7px 5px;"></a>
                        </div>
                        <table id="tblProducts" class="table" cellpadding="0" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Item Name</th>
                                    <th>Quantity(Kgs)</th>
                                    <th>Price(Per KG)</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.sale_Products)
                                {
                                    <tr>
                                        <td>@item.Item</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.Price</td>
                                        <td>@item.Total</td>
                                        <td><input type="button" value="Remove" onclick="Remove(this)" class="btn btn-danger form-control" /></td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td>@Html.DropDownList("MyProducts", new SelectList(Model.ProductList, "Text", "Text"), new { @class = "form-control required", @id = "txtItem", type = "option" })</td>
                                    <td><input type="text" id="txtQuantity" class="form-control" /></td>
                                    <td><input type="text" id="txtPrice" class="form-control" /></td>
                                    <td><input type="text" id="txtTotal" class="form-control" readonly /></td>
                                    <td><input type="button" id="btnAdd" value="Add" class="btn btn-primary form-control" /></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="box-footer">
                        <input type="submit" class="btn btn-primary" value="Submit" id="btnSave" />
                        <a href="@Url.Action("List", "Sales")" class="btn btn-default">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts
{
    <script type="text/javascript">
    $("body").on("click", "#btnAdd", function () {
        //Reference the Name and Country TextBoxes.
        var txtItem = $("#txtItem");
        var txtQuantity = $("#txtQuantity");
        var txtPrice = $("#txtPrice");
        var txtTotal = $("#txtTotal");

        //Get the reference of the Table's TBODY element.
        var tBody = $("#tblProducts > TBODY")[0];

        //Add Row.
        var row = tBody.insertRow(-1);

        //Add Name cell.
        var cell = $(row.insertCell(-1));
        cell.html(txtItem.val());

        //Add Age cell.
        cell = $(row.insertCell(-1));
        cell.html(txtQuantity.val());

        //Add Sex cell.
        cell = $(row.insertCell(-1));
        cell.html(txtPrice.val());

        //Add Berth cell.
        cell = $(row.insertCell(-1));
        cell.html(txtTotal.val());

        //Add Button cell.
        cell = $(row.insertCell(-1));
        var btnRemove = $("<input />");
        btnRemove.attr("type", "button");
        btnRemove.attr("class", "btn btn-danger form-control");
        btnRemove.attr("onclick", "Remove(this);");
        btnRemove.val("Remove");
        cell.append(btnRemove);

        //Clear the TextBoxes.
        txtItem.val("");
        txtQuantity.val("");
        txtPrice.val("");
        txtTotal.val("");
        $('#test').text(0);
    });

    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete: " + name)) {
            //Get the reference of the Table.
            var table = $("#tblProducts")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };

    $("body").on("click", "#btnSave", function () {
        //Loop through the Table rows and build a JSON array.
        var sale_Products = new Array();
        $("#tblProducts TBODY TR").each(function () {
            var row = $(this);
            var product = {};
            product.Item = row.find("TD").eq(0).html();
            product.Quantity = row.find("TD").eq(1).html();
            product.Price = row.find("TD").eq(2).html();
            product.Total = row.find("TD").eq(3).html();
            sale_Products.push(product);
        });

        var data = new FormData();
        data.append('saleTo', $("#saleTo").val());
        data.append('buyerPhoneNo', $("#buyerPhoneNo").val());
        data.append('saleDate', $("#saleDate").val());
        data.append('sale_Prod', JSON.stringify(sale_Products));
        debugger;

        //Send the JSON array to Controller using AJAX.
        $.ajax({
            type: "POST",
            url: "/Sales/Create",
            data: data,
            processData: false,
            contentType: false,
            success: function (result) {
                if (result) {
                    alert("Record(s) Updated.");
                    window.location.href = '@Url.Action("List","Sales")';
                }
            }
        });
    });

    $("body").on("change", function () {
        var data = new FormData();
        data.append('itemName', $("#txtItem").val());

        $.ajax({
            type: "POST",
            url: "/Sales/GetProductQuantity",
            data: data,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response) {
                    $('#ProductGrossTotal').val(response);
                    $('#test').text(response);
                }
                else {
                    $('#test').text(0);
                }
            }
        });
    })

    $('#saleDate').datepicker({
        autoclose: true,
        dateFormat: "dd/mm/yy"
    });

    $('#txtPrice').keyup(function () {
        var textone;
        var texttwo;
        textone = parseFloat($('#txtQuantity').val());
        texttwo = parseFloat($('#txtPrice').val());
        var result = textone * texttwo;
        $('#txtTotal').val(result);
    });
    </script>
}
