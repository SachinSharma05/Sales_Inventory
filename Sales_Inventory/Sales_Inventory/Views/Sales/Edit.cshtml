@model Sales_Inventory.Models.SalesViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12">
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Profile Detail</h3>
        </div>
        <div class="box-body">
            <div class="col-md-3 col-sm-6">
                <div class="form-group">
                    <label>Sale From</label>
                    @Html.TextBoxFor(m => m.Sale_To, new { @class = "form-control required", placeholder = "Enter Sale To Name", @id = "saleFrom" })
                    @Html.ValidationMessageFor(m => m.Sale_To)
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="form-group">
                    <label>Buyer Name</label>
                    @Html.TextBoxFor(m => m.Sale_By, new { @class = "form-control required", placeholder = "Enter Sale By Name", @id = "saleBy" })
                    @Html.ValidationMessageFor(m => m.Sale_By)
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="form-group">
                    <label>Seller Phone </label>
                    @Html.TextBoxFor(m => m.Sale_To_Phone, new { @class = "form-control required", placeholder = "Enter Buyer Phone No", @id = "sellerPhoneNo" })
                    @Html.ValidationMessageFor(m => m.Sale_To_Phone)
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="form-group">
                    <label>Buyer Phone </label>
                    @Html.TextBoxFor(m => m.Sale_By_Phone, new { @class = "form-control required", placeholder = "Enter Seller Phone No", @id = "buyerPhoneNo" })
                    @Html.ValidationMessageFor(m => m.Sale_By_Phone)
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="form-group">
                    <label>Purchase Date</label>
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.TextBoxFor(m => m.Sale_Date, "{0:dd/MM/yyyy}", new { @class = "form-control", placeholder = "Enter Sale Date dd/mm/yyyy", @id = "saleDate" })
                        @Html.ValidationMessageFor(m => m.Sale_Date)
                    </div>
                </div>
            </div>
            <table id="tblProducts" class="table" cellpadding="0" cellspacing="0">
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Quantity(Kgs)</th>
                        <th>Price(Per KG)</th>
                        <th>Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.sale_Products)
                    {
                        <tr>
                            <td>@item.Item</td>
                            <td>@item.Quantity</td>
                            <td>@item.Price</td>
                            <td>@item.Total</td>
                            <td><input type="button" value="Remove" onclick="Remove(this)" class="form-control" /></td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td><input type="text" id="txtItemName" class="form-control" /></td>
                        <td><input type="number" id="txtQuantity" class="form-control" /></td>
                        <td><input type="text" id="txtPrice" class="form-control" /></td>
                        <td><input type="text" id="txtTotal" class="form-control" /></td>
                        <td><input type="button" id="btnAdd" value="Add" class="form-control" /></td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="box-footer">
            <input type="submit" class="btn btn-primary" value="Submit" id="btnSave" />
            <a href="@Url.Action("List", "Sales")" class="btn btn-default">Cancel</a>
        </div>
    </div>
</div>

<script type="text/javascript">
    $("body").on("click", "#btnAdd", function () {
        //Reference the Name and Country TextBoxes.
        var txtItemName = $("#txtItemName");
        var txtQuantity = $("#txtQuantity");
        var txtPrice = $("#txtPrice");
        var txtTotal = $("#txtTotal");

        //Get the reference of the Table's TBODY element.
        var tBody = $("#tblProducts > TBODY")[0];

        //Add Row.
        var row = tBody.insertRow(-1);

        //Add Name cell.
        var cell = $(row.insertCell(-1));
        cell.html(txtItemName.val());

        //Add Age cell.
        cell = $(row.insertCell(-1));
        cell.html(txtQuantity.val());

        //Add Sex cell.
        cell = $(row.insertCell(-1));
        cell.html(txtPrice.val());

        //Add Berth cell.
        cell = $(row.insertCell(-1));
        cell.html(txtTotal.val());

        //Add Button cell.
        cell = $(row.insertCell(-1));
        var btnRemove = $("<input />");
        btnRemove.attr("type", "button");
        btnRemove.attr("onclick", "Remove(this);");
        btnRemove.val("Remove");
        cell.append(btnRemove);

        //Clear the TextBoxes.
        txtItemName.val("");
        txtQuantity.val("");
        txtPrice.val("");
        txtTotal.val("");
    });

    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete: " + name)) {
            //Get the reference of the Table.
            var table = $("#tblProducts")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };

    $("body").on("click", "#btnSave", function () {
        //Loop through the Table rows and build a JSON array.
        var sale_Products = new Array();
        $("#tblProducts TBODY TR").each(function () {
            var row = $(this);
            var product = {};
            product.ItemName = row.find("TD").eq(0).html();
            product.Quantity = row.find("TD").eq(1).html();
            product.Price = row.find("TD").eq(2).html();
            product.Total = row.find("TD").eq(3).html();
            sale_Products.push(product);
        });

        var data = new FormData();
        data.append('saleFrom', $("#saleFrom").val());
        data.append('saleBy', $("#saleBy").val());
        data.append('sellerPhoneNo', $("#sellerPhoneNo").val());
        data.append('buyerPhoneNo', $("#buyerPhoneNo").val());
        data.append('saleDate', $("#saleDate").val());
        data.append('sale_Prod', JSON.stringify(sale_Products));
        debugger;

        //Send the JSON array to Controller using AJAX.
        $.ajax({
            type: "POST",
            url: "/Sales/Create",
            data: data,
            processData: false,
            contentType: false,
            success: function (r) {
                alert("Record(s) Inserted.");
                window.location("")
            }
        });
    });
</script>

<script>
    $('#txtPrice').keyup(function () {
        var textone;
        var texttwo;
        textone = parseFloat($('#txtQuantity').val());
        texttwo = parseFloat($('#txtPrice').val());
        var result = textone * texttwo;
        $('#txtTotal').val(result.toFixed(2));
    });
</script>
